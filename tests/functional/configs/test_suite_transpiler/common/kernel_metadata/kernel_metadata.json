[
    {
        "action": "normalize_and_transpile",
        "compare": "metadata",
        "action_config": {
            "backend": "cuda",
            "source": "transpiler/common/kernel_metadata/kernel_metadata.cpp",
            "includes": [],
            "defs": [],
            "launcher": ""
        },
        "reference": "transpiler/common/kernel_metadata/kernel_metadata_ref.json"
    },
    {
        "action": "normalize_and_transpile",
        "compare": "metadata",
        "action_config": {
            "backend": "cuda",
            "source": "transpiler/common/kernel_metadata/kernel_metadata_array_of_structs.cpp",
            "includes": [],
            "defs": [],
            "launcher": ""
        },
        "reference": "transpiler/common/kernel_metadata/kernel_metadata_array_of_structs_ref.json"
    },
    {
        "action": "normalize_and_transpile",
        "compare": "metadata",
        "action_config": {
            "backend": "cuda",
            "source": "transpiler/common/kernel_metadata/kernel_metadata_multidimensional_array.cpp",
            "includes": [],
            "defs": [],
            "launcher": ""
        },
        "reference": "transpiler/common/kernel_metadata/kernel_metadata_multidimensional_array_ref.json"
    },
    {
        "action": "normalize_and_transpile",
        "compare": "metadata",
        "action_config": {
            "backend": "cuda",
            "source": "transpiler/common/kernel_metadata/kernel_metadata_enum.cpp",
            "includes": [],
            "defs": [],
            "launcher": ""
        },
        "reference": "transpiler/common/kernel_metadata/kernel_metadata_enum_ref.json"
    },
    {
        "action": "normalize_and_transpile",
        "action_config": {
            "backend": "cuda",
            "source": "transpiler/common/kernel_metadata/struct_with_ptr_to_enum.cpp",
            "includes": [],
            "defs": [],
            "launcher": ""
        },
        "reference": "transpiler/common/kernel_metadata/struct_with_ptr_to_enum_ref.cpp"
    }
]
